[{"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\index.js":"2","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\App.js":"3","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\errorReducer.js":"4","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\authReducer.js":"5","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\geoReducer.js":"6","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\faultReducer.js":"7","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\sensorReducer.js":"8","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\rsReducer.js":"9","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\history\\history.js":"10","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\Home.js":"11","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\socket\\socketConn.js":"12","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\SignUpPage.js":"13","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\SignInPage.js":"14","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\RsPage.js":"15","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\SensorPage.js":"16","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\RsShowPage.js":"17","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\SensorShowPage.js":"18","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\Map.js":"19","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\FaultDeletePage.js":"20","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\actions\\index.js":"21","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\Landing.js":"22","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\DashBoard.js":"23","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\Issue.js":"24","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\ThemeWrapper\\ThemeWrapper.js":"25","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\BackgroundColorWrapper\\BackgroundColorWrapper.js":"26","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\auth\\SignOut.js":"27","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\layouts\\Admin\\Admin.js":"28","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\auth\\SignUp.js":"29","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\auth\\SignIn.js":"30","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\sensor\\Sensor.js":"31","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\fault\\FaultDelete.js":"32","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\map\\MapInit.js":"33","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\routes.js":"34","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\api\\index.js":"35","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\sensor\\SensorShow.js":"36","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\rs\\Rs.js":"37","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\rs\\RsShow.js":"38","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\chart\\ChartLine.js":"39","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\Navbars\\Navbar.js":"40","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\common\\Modal.js":"41","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\Navbars\\AdminNavbar.js":"42","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\Footer\\Footer.js":"43","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\Sidebar\\Sidebar.js":"44","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\FixedPlugin\\FixedPlugin.js":"45","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\common\\SignUpForm.js":"46","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\common\\SignInForm.js":"47","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\contexts\\BackgroundColorContext.js":"48","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\contexts\\ThemeContext.js":"49","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\common\\SensorForm.js":"50","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\common\\FaultDeleteForm.js":"51","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\common\\RsForm.js":"52"},{"size":818,"mtime":1641809385178,"results":"53","hashOfConfig":"54"},{"size":585,"mtime":1639990074470,"results":"55","hashOfConfig":"54"},{"size":3948,"mtime":1642577843963,"results":"56","hashOfConfig":"54"},{"size":338,"mtime":1638193483662,"results":"57","hashOfConfig":"54"},{"size":511,"mtime":1638273674614,"results":"58","hashOfConfig":"54"},{"size":260,"mtime":1638272172848,"results":"59","hashOfConfig":"54"},{"size":367,"mtime":1638705213421,"results":"60","hashOfConfig":"54"},{"size":324,"mtime":1642576894624,"results":"61","hashOfConfig":"54"},{"size":304,"mtime":1642571327447,"results":"62","hashOfConfig":"54"},{"size":94,"mtime":1638001236062,"results":"63","hashOfConfig":"54"},{"size":830,"mtime":1638653637991,"results":"64","hashOfConfig":"54"},{"size":337,"mtime":1641044592144,"results":"65","hashOfConfig":"54"},{"size":1151,"mtime":1638389449567,"results":"66","hashOfConfig":"54"},{"size":1204,"mtime":1638389455108,"results":"67","hashOfConfig":"54"},{"size":1166,"mtime":1638698868107,"results":"68","hashOfConfig":"54"},{"size":1120,"mtime":1638698903817,"results":"69","hashOfConfig":"54"},{"size":246,"mtime":1640334826177,"results":"70","hashOfConfig":"54"},{"size":312,"mtime":1640335816882,"results":"71","hashOfConfig":"54"},{"size":1518,"mtime":1638698065698,"results":"72","hashOfConfig":"54"},{"size":880,"mtime":1639989027066,"results":"73","hashOfConfig":"54"},{"size":5243,"mtime":1642571201019,"results":"74","hashOfConfig":"54"},{"size":1564,"mtime":1642584153318,"results":"75","hashOfConfig":"54"},{"size":9432,"mtime":1642577133317,"results":"76","hashOfConfig":"54"},{"size":5624,"mtime":1642527587125,"results":"77","hashOfConfig":"54"},{"size":695,"mtime":1607696334000,"results":"78","hashOfConfig":"54"},{"size":495,"mtime":1607696334000,"results":"79","hashOfConfig":"54"},{"size":737,"mtime":1638190043049,"results":"80","hashOfConfig":"54"},{"size":4138,"mtime":1640336625377,"results":"81","hashOfConfig":"54"},{"size":580,"mtime":1638722175843,"results":"82","hashOfConfig":"54"},{"size":795,"mtime":1638194530132,"results":"83","hashOfConfig":"54"},{"size":1026,"mtime":1638290418707,"results":"84","hashOfConfig":"54"},{"size":1137,"mtime":1639992876769,"results":"85","hashOfConfig":"54"},{"size":5547,"mtime":1641810081379,"results":"86","hashOfConfig":"54"},{"size":471,"mtime":1641808395393,"results":"87","hashOfConfig":"54"},{"size":337,"mtime":1641043662302,"results":"88","hashOfConfig":"54"},{"size":2888,"mtime":1642571085934,"results":"89","hashOfConfig":"54"},{"size":1311,"mtime":1642526171116,"results":"90","hashOfConfig":"54"},{"size":2914,"mtime":1642571283041,"results":"91","hashOfConfig":"54"},{"size":3523,"mtime":1639822704474,"results":"92","hashOfConfig":"54"},{"size":4026,"mtime":1642584899223,"results":"93","hashOfConfig":"54"},{"size":1140,"mtime":1638189149316,"results":"94","hashOfConfig":"54"},{"size":4355,"mtime":1640336787880,"results":"95","hashOfConfig":"54"},{"size":483,"mtime":1641808292443,"results":"96","hashOfConfig":"54"},{"size":4523,"mtime":1641808337310,"results":"97","hashOfConfig":"54"},{"size":2608,"mtime":1642528286355,"results":"98","hashOfConfig":"54"},{"size":2091,"mtime":1642527822929,"results":"99","hashOfConfig":"54"},{"size":2052,"mtime":1642527915900,"results":"100","hashOfConfig":"54"},{"size":254,"mtime":1607696334000,"results":"101","hashOfConfig":"54"},{"size":201,"mtime":1607696334000,"results":"102","hashOfConfig":"54"},{"size":3764,"mtime":1642530207248,"results":"103","hashOfConfig":"54"},{"size":2100,"mtime":1642527288137,"results":"104","hashOfConfig":"54"},{"size":3923,"mtime":1642530163694,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15ddzz8",{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\index.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\App.js",["227"],"import React, { Component } from \"react\";\nimport history from \"./history/history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { socket } from \"./socket/socketConn\";\n\n//UI Stuff 3rd parties\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"react-notification-alert/dist/animate.css\";\nimport Notify from \"react-notification-alert\";\n\nimport ThemeContextWrapper from \"./components/ThemeWrapper/ThemeWrapper\";\nimport BackgroundColorWrapper from \"./components/BackgroundColorWrapper/BackgroundColorWrapper\";\n\n//pages\nimport Landing from \"./pages/Landing\";\nimport Home from \"./pages/Home\";\nimport SignUpPage from \"./pages/SignUpPage\";\nimport SignInPage from \"./pages/SignInPage\";\nimport SignOut from \"./componentsMain/auth/SignOut\";\nimport RsPage from \"./pages/RsPage\";\nimport SensorPage from \"./pages/SensorPage\";\nimport RsShowPage from \"./pages/RsShowPage\";\nimport SensorShowPage from \"./pages/SensorShowPage\";\nimport { getCurrentUser } from \"./actions/index\";\n// import DashBoard from \"./pages/DashBoard\";\nimport DashboardLayout from \"./layouts/Admin/Admin\";\nimport DashBoard from \"./pages/DashBoard\";\nimport Map from \"./pages/Map\";\nimport Issue from \"./pages/Issue\";\nimport FaultDeletePage from \"./pages/FaultDeletePage\";\n\nclass App extends Component {\n  state = {\n    options: {\n      place: \"tr\",\n      message: (\n        <div>\n          <div>\n            <b>new blockage detected</b>\n            <button className=\"btn btn-secondary\"> More Details</button>\n          </div>\n        </div>\n      ),\n      type: \"danger\",\n      icon: \"now-ui-icons ui-1_bell-53\",\n      autoDismiss: 1,\n    },\n  };\n\n  myFunc = () => {\n    this.refs.notify.notificationAlert(this.state.options);\n  };\n  componentDidMount() {\n    this.props.getCurrentUser();\n    socket.on(\"fault\", (fault) => {\n      this.myFunc();\n    });\n    // socket.emit(\"chartData\", \"giveData\");\n    // socket.on(\"chartDataReturn\", (data) => {\n    //   console.log(data);\n    // });\n  }\n\n  componentWillUnmount() {\n    socket.off(\"fault\", () => {\n      console.log(\"fault listener remove\");\n    });\n  }\n\n  render() {\n    // console.log(history);\n    return (\n      <ThemeContextWrapper>\n        <BackgroundColorWrapper>\n          <Router history={history}>\n            <Switch>\n              <Route path=\"/\" exact component={Landing} />\n              <Route path=\"/signup\" exact component={SignUpPage} />\n              <Route path=\"/signin\" exact component={SignInPage} />\n              <Route path=\"/signout\" exact component={SignOut} />\n              <Route path=\"/rs\" exact component={RsPage} />\n              <Route path=\"/sensor\" exact component={SensorPage} />\n              <Route path=\"/rs-success\" exact component={RsShowPage} />\n              <Route path=\"/sensor-success\" exact component={SensorShowPage} />\n              <Route\n                path=\"/admin/dashboard\"\n                exact\n                component={() => <DashboardLayout com={<DashBoard />} />}\n              />\n              <Route\n                path=\"/admin/map\"\n                exact\n                component={() => <DashboardLayout com={<Map />} />}\n              />\n              <Route\n                path=\"/admin/issue\"\n                exact\n                component={() => <DashboardLayout com={<Issue />} />}\n              />\n              <Route\n                path=\"/admin/issue/:id\"\n                exact\n                component={() => <DashboardLayout com={<FaultDeletePage />} />}\n              />\n            </Switch>\n          </Router>\n          <Notify\n            ref=\"notify\"\n            zIndex={9999}\n            onClick={() => console.log(\"hey\")}\n          />\n        </BackgroundColorWrapper>\n      </ThemeContextWrapper>\n    );\n  }\n}\n\nexport default connect(null, { getCurrentUser })(App);\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\errorReducer.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\authReducer.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\geoReducer.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\faultReducer.js",["228"],"const faultReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"GET_ALL_FAULT\":\r\n      return { ...action.payload };\r\n    case \"DELETE_FAULT\":\r\n      return {\r\n        ...state,\r\n        allFault: state.allFault.filter((fault) => fault._id != action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default faultReducer;\r\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\sensorReducer.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\reducers\\rsReducer.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\history\\history.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\Home.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\socket\\socketConn.js",["229"],"import io from \"socket.io-client\";\r\nconst productionUrl = \"https://drainagemon.herokuapp.com/\";\r\nconst developmentUrl = \"http://localhost:5000/\";\r\n\r\nlet socket = io(developmentUrl, {\r\n  transports: [\"websocket\", \"polling\", \"flashsocket\"],\r\n});\r\n\r\nsocket.on(\"connect\", () => {\r\n  console.log(\"connected\");\r\n});\r\n\r\nexport { io, socket };\r\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\SignUpPage.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\SignInPage.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\RsPage.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\SensorPage.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\RsShowPage.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\SensorShowPage.js",["230"],"import React from \"react\";\r\nimport SensorShow from \"../componentsMain/sensor/SensorShow\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SensorShowPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SensorShow />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SensorShowPage;\r\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\Map.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\FaultDeletePage.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\actions\\index.js",["231"],"import { apiReq } from \"../api/index\";\r\nimport history from \"../history/history\";\r\n\r\nexport const SignUpAction = (formData) => {\r\n  return async (dispatch, getState) => {\r\n    const response = await apiReq.post(\"/auth/signup\", {\r\n      ...formData,\r\n    });\r\n    if (!response.data.username) {\r\n      console.log(response.data);\r\n      // return dispatch({ type: \"ERROR\", payload: response.data });\r\n      return dispatch(ErrorAction(response.data));\r\n    }\r\n    dispatch({ type: \"SIGN_UP\", payload: response.data });\r\n    //here need to navigate to the dashboard.....\r\n    history.push(\"/admin/dashboard\");\r\n  };\r\n};\r\n\r\nexport const SignInAction = (formData) => {\r\n  console.log(\"runs\");\r\n  return async (dispatch, getState) => {\r\n    const response = await apiReq.post(\"/auth/signin\", {\r\n      ...formData,\r\n    });\r\n\r\n    if (!response.data.username) {\r\n      console.log(\"action in data\", response.data);\r\n      // return dispatch({ type: \"ERROR\", payload: response.data });\r\n      return dispatch(ErrorAction(response.data));\r\n    }\r\n    dispatch({ type: \"SIGN_IN\", payload: response.data });\r\n    history.push(\"/admin/dashboard\");\r\n  };\r\n};\r\n\r\nexport const SignOutAction = () => {\r\n  return async (dispatch, getState) => {\r\n    const response = await apiReq.post(\"/auth/signout\");\r\n    dispatch({ type: \"SIGN_OUT\", payload: response.data });\r\n    history.push(\"/\");\r\n  };\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  return async (dispatch, getState) => {\r\n    const response = await apiReq.get(\"/auth/currentuser\");\r\n    if (response.data.username) {\r\n      dispatch({ type: \"CURRENT_USER\", payload: response.data });\r\n    }\r\n  };\r\n};\r\n\r\nexport const ErrorAction = (data) => {\r\n  return (dispatch) => {\r\n    console.log(data);\r\n    dispatch({ type: \"GET_ERRORS\", payload: data });\r\n  };\r\n};\r\n\r\nexport const clearError = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"CLEAR_ERROR\", payload: [] });\r\n  };\r\n};\r\n\r\nexport const getGeoLocation = () => {\r\n  return async (dispatch, getState) => {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      (success) => {\r\n        console.log(success.coords);\r\n        dispatch({\r\n          type: \"GEO_LOC\",\r\n          payload: [success.coords.latitude, success.coords.longitude],\r\n        });\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        dispatch({ type: \"GEO_ERR\", payload: [\"please enable geolocation \"] });\r\n      }\r\n    );\r\n  };\r\n};\r\n\r\nexport const createRs = (data) => {\r\n  return async (dispatch, getState) => {\r\n    const response = await apiReq.post(\"/rs\", {\r\n      ...data,\r\n    });\r\n    if (!response.data.name) {\r\n      console.log(\"action in data\", response.data);\r\n      // return dispatch({ type: \"ERROR\", payload: response.data });\r\n      return dispatch(ErrorAction(response.data));\r\n    }\r\n    dispatch({ type: \"CREATE_RS\", payload: response.data });\r\n    history.push(\"/rs-success\");\r\n  };\r\n};\r\n\r\nexport const createSensor = (data) => {\r\n  return async (dispatch, getState) => {\r\n    const response = await apiReq.post(\"/sensor\", {\r\n      ...data,\r\n    });\r\n    if (!response.data.name) {\r\n      console.log(\"action in data\", response.data);\r\n      // return dispatch({ type: \"ERROR\", payload: response.data });\r\n      return dispatch(ErrorAction(response.data));\r\n    }\r\n    dispatch({ type: \"CREATE_SENSOR\", payload: response.data });\r\n    history.push(\"/sensor-success\");\r\n  };\r\n};\r\n\r\nexport const getALLRs = () => {\r\n  return async (dispatch, getState) => {\r\n    const response = await apiReq.get(\"/rs\");\r\n    if (!response.data[0].name) {\r\n      return dispatch(ErrorAction(response.data));\r\n    }\r\n    dispatch({ type: \"GET_ALL_RS\", payload: response.data });\r\n  };\r\n};\r\n\r\nexport const getAllSensor = () => {\r\n  return async (dispatch, getState) => {\r\n    const response = await apiReq.get(\"/sensor\");\r\n    if (!response.data[0].name) {\r\n      return dispatch(ErrorAction(response.data));\r\n    }\r\n    dispatch({ type: \"GET_ALL_SENSOR\", payload: response.data });\r\n  };\r\n};\r\n\r\nexport const getAllFault = (pageNo = 1, limit = 5) => {\r\n  return async (dispatch, getState) => {\r\n    const response = await apiReq.get(\"/fault\", {\r\n      params: {\r\n        page: pageNo,\r\n        limit: limit,\r\n      },\r\n    });\r\n    // console.log(response.data);\r\n    if (!response.data.allFault) {\r\n      return dispatch(ErrorAction(response.data));\r\n    }\r\n    dispatch({ type: \"GET_ALL_FAULT\", payload: response.data });\r\n  };\r\n};\r\n\r\nexport const deletedFault = (id, action) => {\r\n  return async (dispatch, getState) => {\r\n    console.log(id, action);\r\n    const res = await apiReq.post(`/fault/${id}`, {\r\n      ...action,\r\n    });\r\n    dispatch({ type: \"DELETE_FAULT\", payload: id });\r\n    history.push(\"/admin/issue\");\r\n    // return getAllFault();\r\n  };\r\n};\r\n\r\nexport const changePage = (path) => {\r\n  return async (dispatch) => {\r\n    history.push(path);\r\n  };\r\n};\r\n\r\nexport const removeRs = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"REMOVE_RS\" });\r\n  };\r\n};\r\n\r\nexport const removeSensor = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"REMOVE_SENSOR\" });\r\n  };\r\n};\r\n// export const CleaningCurrentUser = () => {\r\n//   return (dispatch, getState) => {\r\n//     dispatch({ type: \"CLEAN_USER\" });\r\n//   };\r\n// };\r\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\Landing.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\DashBoard.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\pages\\Issue.js",["232"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getAllFault,\r\n  getCurrentUser,\r\n  clearError,\r\n  deletedFault,\r\n  changePage,\r\n} from \"../actions/index\";\r\nimport { io, socket } from \"../socket/socketConn\";\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nclass Issue extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getCurrentUser();\r\n    this.props.getAllFault(1);\r\n    socket.on(\"fault\", (data) => {\r\n      this.props.getAllFault(1);\r\n    });\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  //   this.props.getAllFault(1);\r\n  // }\r\n  componentWillUnmount() {\r\n    this.props.clearError();\r\n    socket.off(\"fault\", () => console.log(\"fault removed\"));\r\n  }\r\n\r\n  successHandler = (id) => {\r\n    console.log(id);\r\n    this.props.deletedFault(id);\r\n  };\r\n\r\n  falsePositiveHandler = (id) => {\r\n    console.log(id);\r\n    this.props.deletedFault(id);\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    if (!this.props.currentUser.username) {\r\n      return (\r\n        <h3 className=\"text-center content text-primary\">\r\n          please Signin First\r\n        </h3>\r\n      );\r\n    }\r\n\r\n    if (this.props.fault.allFault) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"content\">\r\n            <Row>\r\n              <Col md=\"12\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle tag=\"h4\">Issues</CardTitle>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <Table className=\"tablesorter\" responsive>\r\n                      <thead className=\"text-primary\">\r\n                        <tr>\r\n                          <th>Date</th>\r\n                          <th>Time</th>\r\n                          <th>Sensors</th>\r\n                          <th>Rs</th>\r\n                          <th>Measures</th>\r\n                          <th>Situation</th>\r\n                          <th>solved</th>\r\n                          <th className=\"text-center\">action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.props.fault.allFault.map((item, i) => {\r\n                          return (\r\n                            <React.Fragment key={i}>\r\n                              <tr>\r\n                                <td>{new Date(item.date).toDateString()}</td>\r\n                                <td>\r\n                                  {new Date(item.date).toLocaleTimeString()}\r\n                                </td>\r\n                                <td>\r\n                                  {item.sensor.map((sensor, i) => {\r\n                                    return <p key={i}>{sensor.name}</p>;\r\n                                  })}\r\n                                </td>\r\n                                <td>{item.rs.name}</td>\r\n                                <td>\r\n                                  {item.data.map((data, i) => {\r\n                                    return <p key={i}>{data}</p>;\r\n                                  })}\r\n                                </td>\r\n                                <td>{item.situation}</td>\r\n                                <td>{item.solved}</td>\r\n                                <td className=\"text-center\">\r\n                                  <i\r\n                                    className=\"tim-icons icon-trash-simple text-danger ml-3\"\r\n                                    onClick={() =>\r\n                                      // this.falsePositiveHandler(item._id)\r\n                                      this.props.changePage(\r\n                                        `/admin/issue/${item._id}`\r\n                                      )\r\n                                    }\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                  />\r\n                                </td>\r\n                              </tr>\r\n                            </React.Fragment>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </Table>\r\n                  </CardBody>\r\n                </Card>\r\n                {this.props.fault.pagination.prev && (\r\n                  <Button\r\n                    onClick={() =>\r\n                      this.props.getAllFault(\r\n                        this.props.fault.pagination.prev.page\r\n                      )\r\n                    }\r\n                    color=\"primary\"\r\n                  >\r\n                    prev\r\n                  </Button>\r\n                )}\r\n                {this.props.fault.pagination.next && (\r\n                  <Button\r\n                    onClick={() =>\r\n                      this.props.getAllFault(\r\n                        this.props.fault.pagination.next.page\r\n                      )\r\n                    }\r\n                    color=\"primary\"\r\n                  >\r\n                    Next\r\n                  </Button>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return <div>Loading</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // return {\r\n  //   faultList: [...state.fault.allFault],\r\n  //   total: state.fault.total,\r\n  //   pagination: { ...state.fault.pagination },\r\n  // };\r\n  return { fault: { ...state.fault }, currentUser: { ...state.currentUser } };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAllFault,\r\n  getCurrentUser,\r\n  clearError,\r\n  deletedFault,\r\n  changePage,\r\n})(Issue);\r\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\ThemeWrapper\\ThemeWrapper.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\BackgroundColorWrapper\\BackgroundColorWrapper.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\auth\\SignOut.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\layouts\\Admin\\Admin.js",["233","234","235"],"import React from \"react\";\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"../../routes\";\n\nimport logo from \"assets/img/react-logo.png\";\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Admin(props) {\n  // console.log(props);\n  const location = useLocation();\n  // console.log(location);\n  const mainPanelRef = React.useRef(null);\n  const [sidebarOpened, setsidebarOpened] = React.useState(\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\n  );\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        // console.log(prop);\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            // component={prop.component}\n            key={key}\n          >\n            <prop.component />\n          </Route>\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color, changeColor }) => (\n        <React.Fragment>\n          <div className=\"wrapper\">\n            <Sidebar\n              routes={routes}\n              logo={{\n                outterLink: \"/\",\n                text: \"Monitoring\",\n                imgSrc: logo,\n              }}\n              toggleSidebar={toggleSidebar}\n            />\n            <div className=\"main-panel\" ref={mainPanelRef} data={color}>\n              <AdminNavbar\n                brandText={getBrandText(location.pathname)}\n                toggleSidebar={toggleSidebar}\n                sidebarOpened={sidebarOpened}\n              />\n              {/*console.log(getRoutes(routes))*/}\n\n              {props.com}\n              {\n                // we don't want the Footer to be rendered on map page\n                location.pathname === \"/admin/map\" ? null : <Footer fluid />\n              }\n            </div>\n          </div>\n          <FixedPlugin bgColor={color} handleBgClick={changeColor} />\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default Admin;\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\auth\\SignUp.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\auth\\SignIn.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\sensor\\Sensor.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\fault\\FaultDelete.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\map\\MapInit.js",["236","237","238","239"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport L from \"leaflet\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  Popup,\r\n  Marker,\r\n  Polyline,\r\n  Circle,\r\n  Tooltip,\r\n} from \"react-leaflet\";\r\nimport { getGeoLocation, getALLRs, getAllSensor } from \"../../actions/index\";\r\nimport { io, socket } from \"../../socket/socketConn\";\r\n// import \"leaflet/dist/leaflet.css\";\r\nimport \"../../style/map.css\";\r\n\r\nclass MapInit extends React.Component {\r\n  state = {\r\n    latLng: [[], []],\r\n    overLatLng: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getGeoLocation();\r\n    this.props.getALLRs();\r\n    this.props.getAllSensor();\r\n    socket.on(\"fault\", (fault) => {\r\n      const ans = this.props.sensorList.filter((s, i) => {\r\n        for (let i = 0; i < fault.sensor.length; i++) {\r\n          // console.log(fault.sensor[i], s.id);\r\n          if (fault.sensor[i] == s.id) {\r\n            return true;\r\n          }\r\n        }\r\n      });\r\n\r\n      //here if ans ==1 is remaining for overflow condition\r\n      if (ans.length == 1) {\r\n        console.log(\"inner\");\r\n        console.log(ans[0].location.Coordinates);\r\n        this.setState({ overLatLng: [...ans[0].location.Coordinates] });\r\n      }\r\n\r\n      if (ans.length > 1) {\r\n        // console.log(\"answer\", ans);\r\n        // console.log(\"ansLocation\", [\r\n        //   [...ans[0].location.Coordinates],\r\n        //   [...ans[1].location.Coordinates],\r\n        // ]);\r\n        this.setState((prev) => {\r\n          return {\r\n            latLng: [\r\n              [...ans[0].location.Coordinates],\r\n              [...ans[1].location.Coordinates],\r\n            ],\r\n          };\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socket.off(\"fault\", () => console.log(\"fault listner removed\"));\r\n  }\r\n  getIconRs() {\r\n    return L.icon({\r\n      iconUrl:\r\n        \"https://img.icons8.com/external-flatart-icons-flat-flatarticons/64/000000/external-map-brazilian-carnival-flatart-icons-flat-flatarticons.png\",\r\n      iconSize: [64, 64],\r\n      iconAnchor: [24, 24],\r\n    });\r\n  }\r\n\r\n  getIconSensor() {\r\n    return L.icon({\r\n      iconUrl: \"https://img.icons8.com/ios/50/000000/marker-storm--v1.png\",\r\n      iconSize: [64, 64],\r\n      iconAnchor: [24, 24],\r\n    });\r\n  }\r\n\r\n  getIconHome() {\r\n    return L.icon({\r\n      iconUrl: \"https://img.icons8.com/ios/50/000000/order-delivered.png\",\r\n      iconSize: [64, 64],\r\n      iconAnchor: [24, 24],\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.props.center.length > 0) {\r\n      // console.log(this.props.center);\r\n      return (\r\n        <MapContainer\r\n          center={this.props.center}\r\n          zoom={1000}\r\n          scrollWheelZoom={false}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {this.props.rsList.length > 0\r\n            ? this.props.rsList.map((rs, i) => {\r\n                // console.log(rs);\r\n                return (\r\n                  <Marker\r\n                    position={rs.location.Coordinates}\r\n                    icon={this.getIconRs()}\r\n                    key={i}\r\n                  >\r\n                    <Popup>\r\n                      <h6 style={{ color: \"ThreeDDarkShadow\" }}>{rs.name}</h6>\r\n                      <h6 style={{ color: \"ThreeDDarkShadow\" }}>\r\n                        {rs.version}\r\n                      </h6>\r\n                    </Popup>\r\n                  </Marker>\r\n                );\r\n              })\r\n            : null}\r\n\r\n          {this.props.sensorList.length > 0\r\n            ? this.props.sensorList.map((sensor, i) => {\r\n                // console.log(rs);\r\n                return (\r\n                  <Marker\r\n                    position={sensor.location.Coordinates}\r\n                    key={i}\r\n                    // icon={this.getIconSensor()}\r\n                  >\r\n                    <Popup>\r\n                      <h6 style={{ color: \"ThreeDDarkShadow\" }}>{sensor.id}</h6>\r\n                      <h6 style={{ color: \"ThreeDDarkShadow\" }}>\r\n                        {sensor.name}\r\n                      </h6>\r\n                      <h6 style={{ color: \"ThreeDDarkShadow\" }}>\r\n                        {sensor.kind}\r\n                      </h6>\r\n                    </Popup>\r\n                  </Marker>\r\n                );\r\n              })\r\n            : null}\r\n\r\n          <Polyline positions={this.state.latLng} color=\"red\">\r\n            <Tooltip>Minus(Might be blockage)</Tooltip>\r\n          </Polyline>\r\n\r\n          <Circle\r\n            center={[22.300151349649123, 73.23834911547878]}\r\n            radius={500}\r\n          />\r\n\r\n          <Marker position={this.props.center} icon={this.getIconHome()}>\r\n            <Popup className=\"text-success\">\r\n              <h1 style={{ color: \"ThreeDDarkShadow\" }}>home</h1>\r\n            </Popup>\r\n          </Marker>\r\n          {this.state.overLatLng.length > 0 && (\r\n            <Circle center={this.state.overLatLng} radius={10} color=\"red\">\r\n              <Tooltip>overflow</Tooltip>\r\n            </Circle>\r\n          )}\r\n        </MapContainer>\r\n      );\r\n    }\r\n    return <div className=\"text-center text-primary\">Loading Map....</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    center: [...state.geo],\r\n    rsList: [...state.rs],\r\n    sensorList: [...state.sensor],\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getGeoLocation,\r\n  getALLRs,\r\n  getAllSensor,\r\n})(MapInit);\r\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\routes.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\api\\index.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\sensor\\SensorShow.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\rs\\Rs.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\rs\\RsShow.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\chart\\ChartLine.js",["240","241"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport { socket } from \"../../socket/socketConn\";\r\n\r\nlet options = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    titleFontColor: \"#333\",\r\n    bodyFontColor: \"#666\",\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.0)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        ticks: {\r\n          suggestedMin: 60,\r\n          suggestedMax: 125,\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.1)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nlet canvas = document.createElement(\"CANVAS\");\r\nlet ctx = canvas.getContext(\"2d\");\r\n\r\nlet gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\ngradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\ngradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\ngradientStroke.addColorStop(0, \"rgba(29,140,248,0)\");\r\n\r\nconst labels = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\n\r\nclass ChartLine extends React.Component {\r\n  state = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: labels,\r\n        fill: true,\r\n        data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\r\n        backgroundColor: gradientStroke,\r\n        borderColor: \"#1f8ef1\",\r\n        borderWidth: 2,\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        pointBackgroundColor: \"#1f8ef1\",\r\n        pointBorderColor: \"rgba(255,255,255,0)\",\r\n        pointHoverBackgroundColor: \"#1f8ef1\",\r\n        pointBorderWidth: 20,\r\n        pointHoverRadius: 4,\r\n        pointHoverBorderWidth: 15,\r\n        pointRadius: 4,\r\n      },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    socket.emit(\"chartData\", \"giveData\");\r\n    socket.on(\"chartDataReturn\", (data) => {\r\n      console.log(data);\r\n      const chartValues = data.map((singleData) => {\r\n        return singleData.value;\r\n      });\r\n      //   console.log(datasetss);\r\n      this.setState({\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: \"Faults\",\r\n            fill: true,\r\n            data: chartValues,\r\n            backgroundColor: gradientStroke,\r\n            borderColor: \"#1f8ef1\",\r\n            borderWidth: 2,\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            pointBackgroundColor: \"#1f8ef1\",\r\n            pointBorderColor: \"rgba(255,255,255,0)\",\r\n            pointHoverBackgroundColor: \"#1f8ef1\",\r\n            pointBorderWidth: 20,\r\n            pointHoverRadius: 4,\r\n            pointHoverBorderWidth: 15,\r\n            pointRadius: 4,\r\n          },\r\n        ],\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socket.off(\"chartDataReturn\", () =>\r\n      console.log(\"chartDataReturn listener removed\")\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <Line data={this.state} options={options} />;\r\n  }\r\n}\r\n\r\nexport default ChartLine;\r\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\Navbars\\Navbar.js",["242","243","244","245","246","247","248","249","250","251","252","253","254"],"import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Input,\r\n  InputGroup,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Modal,\r\n  NavbarToggler,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport { SignOutAction } from \"../../actions/index\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction AdminNavbar(props) {\r\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\r\n  const [modalSearch, setmodalSearch] = React.useState(false);\r\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", updateColor);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", updateColor);\r\n    };\r\n  });\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  const updateColor = () => {\r\n    if (window.innerWidth < 993 && collapseOpen) {\r\n      setcolor(\"bg-white\");\r\n    } else {\r\n      setcolor(\"navbar-transparent\");\r\n    }\r\n  };\r\n  // this function opens and closes the collapse on small devices\r\n  const toggleCollapse = () => {\r\n    if (collapseOpen) {\r\n      setcolor(\"navbar-transparent\");\r\n    } else {\r\n      setcolor(\"bg-white\");\r\n    }\r\n    setcollapseOpen(!collapseOpen);\r\n  };\r\n  // this function is to open the Search modal\r\n  const toggleModalSearch = () => {\r\n    setmodalSearch(!modalSearch);\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar className=\"bg-white\" expand=\"lg\">\r\n        <Container fluid>\r\n          <div className=\"navbar-wrapper\">\r\n            <div\r\n              className={classNames(\"navbar-toggle d-inline\", {\r\n                toggled: props.sidebarOpened,\r\n              })}\r\n            >\r\n              <NavbarToggler onClick={props.toggleSidebar}>\r\n                <span className=\"navbar-toggler-bar bar1\" />\r\n                <span className=\"navbar-toggler-bar bar2\" />\r\n                <span className=\"navbar-toggler-bar bar3\" />\r\n              </NavbarToggler>\r\n            </div>\r\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n              <h1 className=\"text-dark\" style={{ marginTop: 25 }}>\r\n                <span className=\"text-info\">D</span>rain\r\n                <span className=\"text-info\">M</span>on\r\n              </h1>\r\n            </NavbarBrand>\r\n          </div>\r\n          <NavbarToggler onClick={toggleCollapse}>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n          </NavbarToggler>\r\n          <Collapse navbar isOpen={collapseOpen}>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <Link to=\"/signup\">\r\n                <Button\r\n                  color=\"info\"\r\n                  style={{\r\n                    padding: \" 0.5rem 1rem\",\r\n                    height: \"2.5rem\",\r\n                    marginTop: \"0.25rem\",\r\n                  }}\r\n                >\r\n                  Signup\r\n                </Button>\r\n              </Link>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n            <Nav navbar>\r\n              <Link to=\"/signin\">\r\n                <Button\r\n                  color=\"info\"\r\n                  style={{\r\n                    padding: \" 0.5rem 1rem\",\r\n                    height: \"2.5rem\",\r\n                    marginTop: \"0.25rem\",\r\n                  }}\r\n                >\r\n                  Signin\r\n                </Button>\r\n              </Link>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminNavbar;\r\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\common\\Modal.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\Navbars\\AdminNavbar.js",["255","256","257","258","259"],"import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n  NavbarToggler,\n  ModalHeader,\n} from \"reactstrap\";\nimport { SignOutAction } from \"../../actions/index\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction AdminNavbar(props) {\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\n  const [modalSearch, setmodalSearch] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n    setcollapseOpen(!collapseOpen);\n  };\n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setmodalSearch(!modalSearch);\n  };\n  return (\n    <>\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <NavbarToggler onClick={props.toggleSidebar}>\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </NavbarToggler>\n            </div>\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              {props.brandText}\n            </NavbarBrand>\n          </div>\n          <NavbarToggler onClick={toggleCollapse}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <Link to=\"/sensor\">\n                <Button\n                  color=\"success\"\n                  style={{\n                    padding: \" 0.5rem 1rem\",\n                    height: \"2.5rem\",\n                    marginTop: \"0.25rem\",\n                  }}\n                >\n                  + Sensor\n                </Button>\n              </Link>\n              <UncontrolledDropdown nav>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  nav\n                  onClick={(e) => e.preventDefault()}\n                >\n                  <div className=\"photo\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/anime3.png\").default}\n                    />\n                  </div>\n                  <b className=\"caret d-none d-lg-block d-xl-block\" />\n                  <p className=\"d-lg-none\">Log out</p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                  <NavLink tag=\"li\">\n                    <DropdownItem\n                      className=\"nav-item\"\n                      onClick={() => dispatch(SignOutAction())}\n                    >\n                      Log out\n                    </DropdownItem>\n                  </NavLink>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nexport default AdminNavbar;\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\Footer\\Footer.js",["260","261","262","263"],"import React from \"react\";\n\n// reactstrap components\nimport { Container, Nav, NavItem, NavLink } from \"reactstrap\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <Container fluid>\n        <div className=\"copyright\">\n          © {new Date().getFullYear()} Get better{\" \"}\n          <a href=\"\" target=\"_blank\">\n            DrainageMonitoring\n          </a>{\" \"}\n          with us.\n        </div>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\Sidebar\\Sidebar.js",["264","265","266","267","268"],"import React from \"react\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Sidebar(props) {\n  const location = useLocation();\n  const sidebarRef = React.useRef(null);\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebarRef.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n  const linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  const { routes, rtlActive, logo } = props;\n  let logoImg = null;\n  let logoText = null;\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-mini\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </a>\n      );\n      logoText = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-normal\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </a>\n      );\n    } else {\n      logoImg = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-mini\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </Link>\n      );\n      logoText = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-normal\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </Link>\n      );\n    }\n  }\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <div className=\"sidebar\" data={color}>\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\n            {logoImg !== null || logoText !== null ? (\n              <div className=\"logo\">\n                {logoImg}\n                {logoText}\n              </div>\n            ) : null}\n            <Nav>\n              {routes.map((prop, key) => {\n                if (prop.redirect) return null;\n                return (\n                  <li\n                    className={\n                      activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                      onClick={props.toggleSidebar}\n                    >\n                      <i className={prop.icon} />\n                      <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                    </NavLink>\n                  </li>\n                );\n              })}\n            </Nav>\n          </div>\n        </div>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\components\\FixedPlugin\\FixedPlugin.js",["269"],"import React from \"react\";\n\n// reactstrap components\nimport { Button, Dropdown, DropdownToggle, Badge } from \"reactstrap\";\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\nimport { backgroundColors } from \"contexts/BackgroundColorContext\";\n\nfunction FixedPlugin(props) {\n  const [dropDownIsOpen, setdropDownIsOpen] = React.useState(false);\n  const handleClick = () => {\n    setdropDownIsOpen(!dropDownIsOpen);\n  };\n  return (\n    <div className=\"fixed-plugin\">\n      <Dropdown isOpen={dropDownIsOpen} toggle={handleClick}>\n        <DropdownToggle tag=\"div\">\n          <i className=\"fa fa-cog fa-2x\" />\n        </DropdownToggle>\n        <ul className=\"dropdown-menu show\">\n          <li className=\"header-title\">SIDEBAR BACKGROUND</li>\n          <li className=\"adjustments-line\">\n            <div className=\"badge-colors text-center\">\n              <Badge\n                color=\"primary\"\n                className={\n                  props.bgColor === backgroundColors.primary ? \"active\" : \"\"\n                }\n                onClick={() => {\n                  props.handleBgClick(backgroundColors.primary);\n                }}\n              />{\" \"}\n              <Badge\n                color=\"info\"\n                className={\n                  props.bgColor === backgroundColors.blue ? \"active\" : \"\"\n                }\n                onClick={() => {\n                  props.handleBgClick(backgroundColors.blue);\n                }}\n              />{\" \"}\n              <Badge\n                color=\"success\"\n                className={\n                  props.bgColor === backgroundColors.green ? \"active\" : \"\"\n                }\n                onClick={() => {\n                  props.handleBgClick(backgroundColors.green);\n                }}\n              />{\" \"}\n            </div>\n          </li>\n          <li className=\"adjustments-line text-center color-change\">\n            <ThemeContext.Consumer>\n              {({ changeTheme }) => (\n                <>\n                  <span className=\"color-label\">LIGHT MODE</span>{\" \"}\n                  <Badge\n                    className=\"light-badge mr-2\"\n                    onClick={() => changeTheme(themes.light)}\n                  />{\" \"}\n                  <Badge\n                    className=\"dark-badge ml-2\"\n                    onClick={() => changeTheme(themes.dark)}\n                  />{\" \"}\n                  <span className=\"color-label\">DARK MODE</span>{\" \"}\n                </>\n              )}\n            </ThemeContext.Consumer>\n          </li>\n        </ul>\n      </Dropdown>\n    </div>\n  );\n}\n\nexport default FixedPlugin;\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\common\\SignUpForm.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\common\\SignInForm.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\contexts\\BackgroundColorContext.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\contexts\\ThemeContext.js",[],"C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\common\\SensorForm.js",["270"],"import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nclass SensorForm extends React.Component {\r\n  showInput = ({ input, meta: { touched, error }, label, dis }) => {\r\n    if (dis == \"text\") {\r\n      return (\r\n        <div className=\"form-group\">\r\n          <label>{label}</label>\r\n          <input type={dis} {...input} className=\"form-control\" />\r\n          <div className=\"text-danger\">{touched ? error : null}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <label>{label}</label>\r\n        <select className=\"custom-select bg-black\" {...input}>\r\n          <option className=\"bg-input\" />\r\n          <option\r\n            value=\"distance sensor\"\r\n            style={{ backgroundColor: \"#27293D\" }}\r\n          >\r\n            Distance Sensor\r\n          </option>\r\n          <option value=\"gas sensor\" style={{ backgroundColor: \"#27293D\" }}>\r\n            Gas Sensor\r\n          </option>\r\n          <option\r\n            value=\"waterflow sensor\"\r\n            style={{ backgroundColor: \"#27293D\" }}\r\n          >\r\n            WaterFlow Sensor\r\n          </option>\r\n        </select>\r\n        <div className=\"text-danger\">{touched ? error : null}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // showDropDown = ({ input, meta: { touched, error }, label, dis }) => {\r\n  //   return (\r\n  //     <div>\r\n  //       <select className=\"custom-select\">\r\n  //         <option value=\"rs2\" selected>\r\n  //           RaspberryPi-2\r\n  //         </option>\r\n  //         <option value=\"rs3\">RaspberryPi-3</option>\r\n  //         <option value=\"rs4\">RaspberryPi-4</option>\r\n  //       </select>\r\n  //       {touched ? error : null}\r\n  //     </div>\r\n  //   );\r\n  // };\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"70vh\", overflowY: \"hidden\" }}\r\n      >\r\n        <div className=\"card margin rounded w-50\">\r\n          <div className=\"card-body\">\r\n            <form\r\n              onSubmit={this.props.handleSubmit(this.props.onSubmitHandler)}\r\n            >\r\n              <Field\r\n                name=\"name\"\r\n                component={this.showInput}\r\n                label=\"name\"\r\n                dis=\"text\"\r\n              />\r\n              <Field\r\n                name=\"kind\"\r\n                component={this.showInput}\r\n                label=\"type\"\r\n                dis=\"drop\"\r\n              />\r\n              <Field\r\n                name=\"values\"\r\n                component={this.showInput}\r\n                label=\"GeoLocation\"\r\n                dis=\"text\"\r\n              />\r\n              <Field\r\n                name=\"rsId\"\r\n                component={this.showInput}\r\n                label=\"RsId\"\r\n                dis=\"text\"\r\n              />\r\n\r\n              <div className=\"text-small text-center text-danger\">\r\n                {this.props.errors.map((error, i) => (\r\n                  <div key={i} className=\"text-danger\">\r\n                    {error.msg}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"btn btn-primary btn-block my-3\">\r\n                create\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formData) => {\r\n  console.log(formData);\r\n  const errors = {};\r\n  if (!formData.name) {\r\n    errors.name = \"must add sensor name\";\r\n  }\r\n  if (!formData.kind) {\r\n    errors.kind = \"must add type of sensor\";\r\n  }\r\n  if (!formData.values) {\r\n    errors.values = \"must add Geolocation of senose\";\r\n  }\r\n  if (!formData.rsId) {\r\n    errors.rsId = \"must add your raspberrypi id\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default reduxForm({ form: \"Senser\", validate })(SensorForm);\r\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\common\\FaultDeleteForm.js",["271"],"import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nclass FaultDeleteForm extends React.Component {\r\n  showInput = ({ input, meta: { touched, invalid, error }, label, d }) => {\r\n    if (d == \"id\") {\r\n      return (\r\n        <div className=\"form-group\">\r\n          <label>{label}</label>\r\n          <input\r\n            type=\"text\"\r\n            value={this.props.idPath}\r\n            disabled\r\n            className=\"form-control\"\r\n          />\r\n          {touched ? error : null}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{label}</label>\r\n        <textarea type=\"text\" {...input} className=\"form-control\" rows=\"50\" />\r\n        {touched ? error : null}\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    console.log(this.props.idPath);\r\n    return (\r\n      <div\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"card margin rounded w-50 ml-5\">\r\n          <div className=\"card-body\">\r\n            <form\r\n              onSubmit={this.props.handleSubmit(this.props.onSubmitHandler)}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n              }}\r\n            >\r\n              <Field name=\"id\" component={this.showInput} label=\"id\" d=\"id\" />\r\n              <Field\r\n                name=\"action\"\r\n                component={this.showInput}\r\n                label=\"action\"\r\n                d=\"action\"\r\n              />\r\n              <button type=\"submit\" className=\"btn btn-info btn-block my-3\">\r\n                Delete\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formData) => {\r\n  const errors = {};\r\n  // if (!formData.id) {\r\n  //   errors.id = \"must enter id\";\r\n  // }\r\n  if (!formData) {\r\n    errors.action = \"must enter action\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default reduxForm({ form: \"faultdelete\", validate })(FaultDeleteForm);\r\n","C:\\Users\\Dell\\Desktop\\project\\production\\frontend\\src\\componentsMain\\common\\RsForm.js",["272"],"import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n// import {\r\n//   UncontrolledDropdown,\r\n//   DropdownToggle,\r\n//   DropdownMenu,\r\n//   DropdownItem,\r\n// } from \"reactstrap\";\r\n\r\nclass RsForm extends React.Component {\r\n  showInput = ({ input, meta: { touched, error }, label, dis }) => {\r\n    if (dis == \"text\") {\r\n      return (\r\n        <div className=\"form-group\">\r\n          <label>{label}</label>\r\n          <input type={dis} {...input} className=\"form-control\" />\r\n          <div className=\"text-danger\">{touched ? error : null}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <label>{label}</label>\r\n        <select className=\"custom-select bg-black\" {...input}>\r\n          <option className=\"bg-input\" />\r\n          <option value=\"rs2\" style={{ backgroundColor: \"#27293D\" }}>\r\n            RaspberryPi-2\r\n          </option>\r\n          <option value=\"rs3\" style={{ backgroundColor: \"#27293D\" }}>\r\n            RaspberryPi-3\r\n          </option>\r\n          <option value=\"rs4\" style={{ backgroundColor: \"#27293D\" }}>\r\n            RaspberryPi-4\r\n          </option>\r\n        </select>\r\n        <div className=\"text-danger\">{touched ? error : null}</div>\r\n      </div>\r\n      // <UncontrolledDropdown>\r\n      //   <DropdownToggle caret data-toggle=\"dropdown\">\r\n      //     Dropdown button\r\n      //   </DropdownToggle>\r\n      //   <DropdownMenu className=\"dropdown-black\">\r\n      //     <DropdownItem>Action</DropdownItem>\r\n      //     <DropdownItem>Another Action</DropdownItem>\r\n      //     <DropdownItem>Something else here</DropdownItem>\r\n      //   </DropdownMenu>\r\n      // </UncontrolledDropdown>\r\n    );\r\n  };\r\n\r\n  // showDropDown = ({ input, meta: { touched, error }, label, dis }) => {\r\n  //   return (\r\n  //     <div>\r\n  //       <select className=\"custom-select\">\r\n  //         <option value=\"rs2\" selected>\r\n  //           RaspberryPi-2\r\n  //         </option>\r\n  //         <option value=\"rs3\">RaspberryPi-3</option>\r\n  //         <option value=\"rs4\">RaspberryPi-4</option>\r\n  //       </select>\r\n  //       {touched ? error : null}\r\n  //     </div>\r\n  //   );\r\n  // };\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"70vh\" }}\r\n      >\r\n        <div className=\"card margin rounded w-50\">\r\n          <div className=\"card-body\">\r\n            <form\r\n              onSubmit={this.props.handleSubmit(this.props.onSubmitHandler)}\r\n            >\r\n              <Field\r\n                name=\"name\"\r\n                component={this.showInput}\r\n                label=\"name\"\r\n                dis=\"text\"\r\n              />\r\n              <Field\r\n                name=\"version\"\r\n                component={this.showInput}\r\n                label=\"version\"\r\n                dis=\"drop\"\r\n              />\r\n              <Field\r\n                name=\"values\"\r\n                component={this.showInput}\r\n                label=\"GeoLocation\"\r\n                dis=\"text\"\r\n              />\r\n              <div className=\"text-small text-center text-danger\">\r\n                {this.props.errors.map((error, i) => (\r\n                  <div key={i} className=\"text-danger\">\r\n                    {error.message}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary btn-block my-3\">\r\n                create\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formData) => {\r\n  console.log(formData);\r\n  const errors = {};\r\n  if (!formData.name) {\r\n    errors.name = \"must add name\";\r\n  }\r\n  if (!formData.version) {\r\n    errors.version = \"must add version\";\r\n  }\r\n  if (!formData.values) {\r\n    errors.values = \"must add geolocation\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default reduxForm({ form: \"Rs\", validate })(RsForm);\r\n",{"ruleId":"273","severity":1,"message":"274","line":20,"column":8,"nodeType":"275","messageId":"276","endLine":20,"endColumn":12},{"ruleId":"277","severity":1,"message":"278","line":8,"column":62,"nodeType":"279","messageId":"280","endLine":8,"endColumn":64},{"ruleId":"273","severity":1,"message":"281","line":2,"column":7,"nodeType":"275","messageId":"276","endLine":2,"endColumn":20},{"ruleId":"273","severity":1,"message":"282","line":3,"column":10,"nodeType":"275","messageId":"276","endLine":3,"endColumn":14},{"ruleId":"273","severity":1,"message":"283","line":154,"column":11,"nodeType":"275","messageId":"276","endLine":154,"endColumn":14},{"ruleId":"273","severity":1,"message":"284","line":10,"column":10,"nodeType":"275","messageId":"276","endLine":10,"endColumn":12},{"ruleId":"273","severity":1,"message":"285","line":2,"column":17,"nodeType":"275","messageId":"276","endLine":2,"endColumn":23},{"ruleId":"273","severity":1,"message":"286","line":2,"column":25,"nodeType":"275","messageId":"276","endLine":2,"endColumn":33},{"ruleId":"273","severity":1,"message":"287","line":66,"column":9,"nodeType":"275","messageId":"276","endLine":66,"endColumn":18},{"ruleId":"273","severity":1,"message":"284","line":14,"column":10,"nodeType":"275","messageId":"276","endLine":14,"endColumn":12},{"ruleId":"288","severity":1,"message":"289","line":29,"column":55,"nodeType":"290","messageId":"291","endLine":29,"endColumn":57},{"ruleId":"277","severity":1,"message":"292","line":32,"column":31,"nodeType":"279","messageId":"280","endLine":32,"endColumn":33},{"ruleId":"277","severity":1,"message":"292","line":39,"column":22,"nodeType":"279","messageId":"280","endLine":39,"endColumn":24},{"ruleId":"273","severity":1,"message":"293","line":2,"column":10,"nodeType":"275","messageId":"276","endLine":2,"endColumn":17},{"ruleId":"273","severity":1,"message":"294","line":3,"column":16,"nodeType":"275","messageId":"276","endLine":3,"endColumn":19},{"ruleId":"273","severity":1,"message":"295","line":9,"column":3,"nodeType":"275","messageId":"276","endLine":9,"endColumn":17},{"ruleId":"273","severity":1,"message":"296","line":10,"column":3,"nodeType":"275","messageId":"276","endLine":10,"endColumn":15},{"ruleId":"273","severity":1,"message":"297","line":11,"column":3,"nodeType":"275","messageId":"276","endLine":11,"endColumn":15},{"ruleId":"273","severity":1,"message":"298","line":12,"column":3,"nodeType":"275","messageId":"276","endLine":12,"endColumn":23},{"ruleId":"273","severity":1,"message":"299","line":13,"column":3,"nodeType":"275","messageId":"276","endLine":13,"endColumn":8},{"ruleId":"273","severity":1,"message":"300","line":14,"column":3,"nodeType":"275","messageId":"276","endLine":14,"endColumn":13},{"ruleId":"273","severity":1,"message":"301","line":17,"column":3,"nodeType":"275","messageId":"276","endLine":17,"endColumn":10},{"ruleId":"273","severity":1,"message":"302","line":20,"column":3,"nodeType":"275","messageId":"276","endLine":20,"endColumn":8},{"ruleId":"273","severity":1,"message":"303","line":22,"column":3,"nodeType":"275","messageId":"276","endLine":22,"endColumn":14},{"ruleId":"273","severity":1,"message":"304","line":24,"column":10,"nodeType":"275","messageId":"276","endLine":24,"endColumn":23},{"ruleId":"273","severity":1,"message":"305","line":31,"column":10,"nodeType":"275","messageId":"276","endLine":31,"endColumn":15},{"ruleId":"273","severity":1,"message":"306","line":32,"column":9,"nodeType":"275","messageId":"276","endLine":32,"endColumn":17},{"ruleId":"273","severity":1,"message":"307","line":58,"column":9,"nodeType":"275","messageId":"276","endLine":58,"endColumn":26},{"ruleId":"273","severity":1,"message":"299","line":13,"column":3,"nodeType":"275","messageId":"276","endLine":13,"endColumn":8},{"ruleId":"273","severity":1,"message":"300","line":14,"column":3,"nodeType":"275","messageId":"276","endLine":14,"endColumn":13},{"ruleId":"273","severity":1,"message":"302","line":20,"column":3,"nodeType":"275","messageId":"276","endLine":20,"endColumn":8},{"ruleId":"273","severity":1,"message":"303","line":22,"column":3,"nodeType":"275","messageId":"276","endLine":22,"endColumn":14},{"ruleId":"273","severity":1,"message":"307","line":58,"column":9,"nodeType":"275","messageId":"276","endLine":58,"endColumn":26},{"ruleId":"273","severity":1,"message":"308","line":4,"column":21,"nodeType":"275","messageId":"276","endLine":4,"endColumn":24},{"ruleId":"273","severity":1,"message":"309","line":4,"column":26,"nodeType":"275","messageId":"276","endLine":4,"endColumn":33},{"ruleId":"273","severity":1,"message":"301","line":4,"column":35,"nodeType":"275","messageId":"276","endLine":4,"endColumn":42},{"ruleId":"310","severity":1,"message":"311","line":12,"column":11,"nodeType":"312","endLine":12,"endColumn":38},{"ruleId":"273","severity":1,"message":"313","line":10,"column":26,"nodeType":"275","messageId":"276","endLine":10,"endColumn":43},{"ruleId":"273","severity":1,"message":"314","line":13,"column":3,"nodeType":"275","messageId":"276","endLine":13,"endColumn":19},{"ruleId":"273","severity":1,"message":"315","line":39,"column":9,"nodeType":"275","messageId":"276","endLine":39,"endColumn":20},{"ruleId":"316","severity":1,"message":"317","line":48,"column":9,"nodeType":"312","messageId":"318","endLine":53,"endColumn":10,"fix":"319"},{"ruleId":"316","severity":1,"message":"317","line":60,"column":9,"nodeType":"312","messageId":"318","endLine":65,"endColumn":10,"fix":"320"},{"ruleId":"273","severity":1,"message":"321","line":4,"column":10,"nodeType":"275","messageId":"276","endLine":4,"endColumn":16},{"ruleId":"277","severity":1,"message":"292","line":6,"column":13,"nodeType":"279","messageId":"280","endLine":6,"endColumn":15},{"ruleId":"277","severity":1,"message":"292","line":6,"column":11,"nodeType":"279","messageId":"280","endLine":6,"endColumn":13},{"ruleId":"277","severity":1,"message":"292","line":12,"column":13,"nodeType":"279","messageId":"280","endLine":12,"endColumn":15},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'productionUrl' is assigned a value but never used.","'Link' is defined but never used.","'res' is assigned a value but never used.","'io' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'getRoutes' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '===' and instead saw '=='.","'connect' is defined but never used.","'Bar' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'Input' is defined but never used.","'InputGroup' is defined but never used.","'NavLink' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'SignOutAction' is defined but never used.","'color' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'toggleModalSearch' is assigned a value but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ReactstrapNavLink' is defined but never used.","'backgroundColors' is defined but never used.","'linkOnClick' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"322","text":"323"},{"range":"324","text":"323"},"'Button' is defined but never used.",[1566,1566]," rel=\"noreferrer\"",[1882,1882]]